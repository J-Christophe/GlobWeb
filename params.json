{"name":"Globweb","google":"","tagline":"Virtual Globe with WebGL","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"GlobWeb\r\n=======\r\n\r\nVirtual Globe with WebGL\r\n\r\nGlobWeb is a Javascript library developed by Telespazio France using the new WebGL standard. WebGL allows embedding 3D visualisation in a browser without any plugin and is supported on recent versions of Mozilla Firefox and Google Chrome.\r\nThe main focus of GlobWeb is to provide a high performance 3D library for visualizing geospatial data, Telespazio being itself a provider of geospatial data through its partner GeoEye.\r\nThrough a partnership with CNES and CDS, GlobWeb also supports visualization of astronomical data.  \r\nGlobWeb supports the following features:\r\n * Base raster layer using WMS, Bing Map REST API, WorldWind Tile Service, HEALPix\r\n * Manipulation of vector data through GeoJSON interface: add/remove/select/style modification\r\n * Overlay WMS layer on top of existing base layers\r\n * High performance vector rendering  : automatic tiling of vector data\r\n\r\n### Documentation ###\r\n<a href=\"./doc/index.html\">API Documentation</a>\r\n\r\n### Demos ###\r\n\r\n<a href=\"http://demonstrator.telespazio.com/GlobWeb/\">Demonstration with earth observation data</a>  \r\n<a href=\"http://demonstrator.telespazio.com/AstroWeb/\">Demonstration with astronomic data</a>  \r\n<a href=\"http://demonstrator.telespazio.com/EoliWebGL/\">Prototype done for ESA</a>  \r\n\r\n### Getting started ###\r\n\r\nSee the examples to show basic usage.\r\n\r\n### Build ###\r\n\r\nTo build a minified version of GlobWeb, Python and Java is needed.\r\nGoogle Closure Compiler is used in Advanced mode to produce a lightweight library.\r\nTo build, just execute the python script build.py in build/.\r\n\r\n### License ###\r\n\r\nLGPL v3\r\n"}